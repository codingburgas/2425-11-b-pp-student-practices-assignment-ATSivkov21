# üåê –ò–º–ø–æ—Ä—Ç–∏ –æ—Ç Flask –∑–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è, –ø—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ, —Å—ä–æ–±—â–µ–Ω–∏—è, –∑–∞—è–≤–∫–∏, —Ñ–∞–π–ª–æ–≤–µ –∏ –¥–æ—Å—Ç—ä–ø –¥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞
from flask import render_template, redirect, url_for, flash, request, send_file, current_app
# üîê –ò–º–ø–æ—Ä—Ç–∏ –∑–∞ –ª–æ–≥–∏–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç
from flask_login import login_required, current_user
# üìò Blueprint –∑–∞ –æ—Å–Ω–æ–≤–Ω–∞—Ç–∞ —á–∞—Å—Ç –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
from app.main import main_bp
# üìù –§–æ—Ä–º–∏: –∞–Ω–∫–µ—Ç–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Ä–µ–¥–∞–∫—Ü–∏—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª
from app.forms import SurveyForm, RegistrationForm, ProfileForm
# üóÉÔ∏è SQLAlchemy –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
from app import db
# üë• –ú–æ–¥–µ–ª–∏: –æ—Ç–≥–æ–≤–æ—Ä–∏ –æ—Ç –∞–Ω–∫–µ—Ç–∞ –∏ –∫–ª–∏–∫–Ω–∞—Ç–∏ —Ä–µ–∫–ª–∞–º–∏
from app.models import SurveyResponse, AdClick
# ü§ñ –ú–æ–¥–µ–ª –∑–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–∞–Ω–µ –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç –∑–∞ –∫–ª–∏–∫–≤–∞–Ω–µ
from app.utils.ai_model import predict_click_probability
# üìä –§—É–Ω–∫—Ü–∏—è –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –∏ –∑–∞–ø–∏—Å –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∏ (–ª–æ–≥–∏—Å—Ç–∏—á–Ω–∞ —Ä–µ–≥—Ä–µ—Å–∏—è)
from app.utils.plot_utils import generate_user_plot
# üé≤ –ó–∞ –∏–∑–±–æ—Ä –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–Ω–∞ —Ä–µ–∫–ª–∞–º–∞
import random
# üìÇ –ó–∞ —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–µ –∏ –ø—ä—Ç–∏—â–∞
import os


ADS = ['ad1.jpg', 'ad2.jpg', 'ad3.jpg']  # –ü—Ä–∏–º–µ—Ä–Ω–∏ —Ä–µ–∫–ª–∞–º–∏

@main_bp.route('/')
def index():
    return render_template('main/index.html') # –ü–æ–∫–∞–∑–≤–∞ index.html

@main_bp.route('/survey', methods=['GET', 'POST'])
@login_required
def survey():
    form = SurveyForm()  # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ñ–æ—Ä–º–∞ –∑–∞ –∞–Ω–∫–µ—Ç–∞

    # –í–∑–∏–º–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞
    ads_dir = os.path.join(current_app.root_path, 'static', 'ads')
    ad_images = [f for f in os.listdir(ads_dir) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]

    # –ü–æ–ø—ä–ª–≤–∞–Ω–µ –Ω–∞ –∏–∑–±–∏—Ä–∞–µ–º–∏—Ç–µ –æ–ø—Ü–∏–∏ –≤ –∞–Ω–∫–µ—Ç–∞—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–∏
    form.selected_ad.choices = [(img, f'Ad {i+1}') for i, img in enumerate(ad_images)]

    # –ê–∫–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –ø–æ–ø—ä–ª–Ω–∏–ª —Ñ–æ—Ä–º–∞—Ç–∞ –∏ —Ç—è –µ –≤–∞–ª–∏–¥–Ω–∞
    if form.validate_on_submit():
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –∑–∞–ø–∏—Å –≤ SurveyResponse
        survey = SurveyResponse(
            age=form.age.data,
            daily_online_hours=form.daily_online_hours.data,
            device=form.device.data,
            interests=form.interests.data,
            selected_ads=form.selected_ad.data,
            user_id=current_user.id
        )
        db.session.add(survey)
        db.session.commit()

        # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –æ—Ç —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
        plot_path = os.path.join(current_app.root_path, 'static', 'results', f'user_{current_user.id}.png')
        generate_user_plot(survey, plot_path)

        # –ü—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ –∫—ä–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ —Å —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
        return redirect(url_for('main.result', survey_id=survey.id))

    return render_template('main/survey.html', form=form)


#@main_bp.route('/result/<int:survey_id>')
#@login_required
#def result(survey_id):
#    survey = SurveyResponse.query.get_or_404(survey_id)
#    prob = predict_click_probability(survey)
#    selected_ad = random.choice(ADS)

    # üñºÔ∏è generate and return image path
#    user_result_path = generate_user_plot(current_user.id, survey)

#    return render_template('main/result.html', prob=prob, ad=selected_ad, user_result_path=user_result_path)


@main_bp.route('/result/<int:survey_id>')
@login_required
def result(survey_id):
    # –í–∑–∏–º–∞–Ω–µ –Ω–∞ –∞–Ω–∫–µ—Ç–∞—Ç–∞ –æ—Ç –±–∞–∑–∞—Ç–∞
    survey = SurveyResponse.query.get_or_404(survey_id)

    # –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç –∑–∞ –∫–ª–∏–∫–≤–∞–Ω–µ (—á—Ä–µ–∑ ML –º–æ–¥–µ–ª)
    prob = predict_click_probability(survey)

    # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –∏ –∑–∞–ø–∏—Å –Ω–∞ –ª–æ–≥–∏—Å—Ç–∏—á–Ω–∞—Ç–∞ —Ä–µ–≥—Ä–µ—Å–∏—è –∫–∞—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    plot_path = os.path.join(current_app.root_path, 'static', 'results', f'user_{current_user.id}.png')
    image_name = generate_user_plot(survey, plot_path)

    return render_template('main/result.html', prob=prob, ad='ad1.jpg', user_result_path=image_name)


@main_bp.route('/download_regression/<int:user_id>')
@login_required
def download_regression(user_id):
    # –ü—ä—Ç –¥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ —Å —Ä–µ–≥—Ä–µ—Å–∏—è—Ç–∞
    file_path = os.path.join(current_app.root_path, 'static', 'results', f'user_{user_id}.png')
    
    if not os.path.exists(file_path):
        flash("Result image not found. Please generate your result first.", "danger")
        return redirect(url_for('main.profile'))

    return send_file(file_path, as_attachment=True)  # –ò–∑–ø—Ä–∞—â–∞–Ω–µ –∫–∞—Ç–æ —Ñ–∞–π–ª –∑–∞ —Å–≤–∞–ª—è–Ω–µ

@main_bp.route('/ad_click/<ad_name>')
@main_bp.route('/ad_click/<ad_name>')
@login_required
def ad_click(ad_name):
    # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å –∑–∞ –∫–ª–∏–∫ –≤—ä—Ä—Ö—É —Ä–µ–∫–ª–∞–º–∞
    click = AdClick(ad_name=ad_name, user_id=current_user.id)
    db.session.add(click)
    db.session.commit()

    flash("Ad click recorded!", "info")
    return redirect(url_for('main.index'))

@main_bp.route('/profile', methods=['GET', 'POST'])
@login_required
def profile():
    # –ü–æ–ø—ä–ª–≤–∞–Ω–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å —Ç–µ–∫—É—â–∏—Ç–µ –¥–∞–Ω–Ω–∏
    form = ProfileForm(obj=current_user)

    # –ü—Ä–∏ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞ –∏ –≤–∞–ª–∏–¥–Ω–∞ —Ñ–æ—Ä–º–∞ ‚Äì –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏—Ç–µ –¥–∞–Ω–Ω–∏
    if form.validate_on_submit():
        current_user.username = form.username.data
        current_user.email = form.email.data
        db.session.commit()
        flash('Profile updated!', 'success')
        return redirect(url_for('main.profile'))

    # –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∞–Ω–∫–µ—Ç–∏—Ç–µ –∏ –∫–ª–∏–∫–æ–≤–µ—Ç–µ –Ω–∞ —Ç–µ–∫—É—â–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
    surveys = SurveyResponse.query.filter_by(user_id=current_user.id).all()
    ad_clicks = AdClick.query.filter_by(user_id=current_user.id).all()

    return render_template('main/profile.html', form=form, surveys=surveys, ad_clicks=ad_clicks)
